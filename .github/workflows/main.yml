name: Continuous Integration

on:
  push:
    paths-ignore:
      - 'doc/**'
      - 'README.md'
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened, labeled]
    branches:
      - main

jobs:
  test:
    name: phenoplier-cli-ci
    runs-on: ubuntu-latest
    env:
      ENV_FOR_DYNACONF: test
    defaults:
      run:
        shell: bash -el {0}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      #----------------------------------------------
      #       install Conda
      #----------------------------------------------
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: false
          activate-environment: phenoplier-cli
          environment-file: conda-linux-64.lock
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies using Poetry
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Using conda environment: ${CONDA_DEFAULT_ENV}"
          poetry -V
          poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install test dependencies
        run: |
          sudo apt install -y hdf5-tools
          sudo apt install -y git-lfs
          git lfs install
          git lfs pull
      #----------------------------------------------
      #              setup data
      #----------------------------------------------
      - name: Setup data
        run: |
          phenoplier get ci_test_data
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          PYTHONPATH=. coverage run -m pytest -rs --color=yes test/
          coverage report -m
